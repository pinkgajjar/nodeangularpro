import { Directive, Input, TemplateRef, ViewContainerRef, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxInitDirective {
    /**
     * @param {?} templateRef
     * @param {?} viewContainer
     */
    constructor(templateRef, viewContainer) {
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set ngxInit(val) {
        this.viewContainer.clear();
        this.viewContainer.createEmbeddedView(this.templateRef, { ngxInit: val });
    }
}
NgxInitDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ngxInit]',
            },] },
];
/** @nocollapse */
NgxInitDirective.ctorParameters = () => [
    { type: TemplateRef, },
    { type: ViewContainerRef, },
];
NgxInitDirective.propDecorators = {
    "ngxInit": [{ type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxInitModule {
}
NgxInitModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: [NgxInitDirective],
                exports: [NgxInitDirective]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { NgxInitDirective, NgxInitModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWluaXQuanMubWFwIiwic291cmNlcyI6WyJuZzovL25neC1pbml0L2xpYi9uZ3gtaW5pdC5kaXJlY3RpdmUudHMiLCJuZzovL25neC1pbml0L2xpYi9uZ3gtaW5pdC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgVGVtcGxhdGVSZWYsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25neEluaXRdJyxcbn0pXG5leHBvcnQgY2xhc3MgTmd4SW5pdERpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sXG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmKSB7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbmd4SW5pdCh2YWw6IGFueSkge1xuICAgIHRoaXMudmlld0NvbnRhaW5lci5jbGVhcigpO1xuICAgIHRoaXMudmlld0NvbnRhaW5lci5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVJlZiwge25neEluaXQ6IHZhbH0pO1xuICB9XG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmd4SW5pdERpcmVjdGl2ZSB9IGZyb20gJy4vbmd4LWluaXQuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW10sXG4gIGRlY2xhcmF0aW9uczogW05neEluaXREaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbTmd4SW5pdERpcmVjdGl2ZV1cbn0pXG5leHBvcnQgY2xhc3MgTmd4SW5pdE1vZHVsZSB7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7O0lBTUUsWUFDVSxhQUNBO1FBREEsZ0JBQVcsR0FBWCxXQUFXO1FBQ1gsa0JBQWEsR0FBYixhQUFhO0tBQ3RCOzs7OztRQUVZLE9BQU8sQ0FBQyxHQUFRO1FBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDM0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQUM7Ozs7WUFYM0UsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxXQUFXO2FBQ3RCOzs7O1lBSjBCLFdBQVc7WUFBRSxnQkFBZ0I7Ozt3QkFXckQsS0FBSzs7Ozs7OztBQ1hSOzs7WUFHQyxRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsWUFBWSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0JBQ2hDLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2FBQzVCOzs7Ozs7Ozs7Ozs7Ozs7In0=